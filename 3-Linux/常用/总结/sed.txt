sed全称是：Stream EDitor即流编辑器，是一个很好的文本处理工具，本身是一个管道命令，主要是以行为单位进行处理，可以将数据行进行替换、删除、新增、选取等特定工作。
sed命令的功能同awk类似，差别在于，sed简单，对列处理的功能要差一些，awk的功能复杂，对列处理的功能比较强大。
sed是一种在线编辑器，它一次处理一行内容。处理时，把当前处理的行存储在临时缓冲区中，接着用sed命令处理缓冲区中的内容，处理完成后，把缓冲区的内容送往屏幕。接着处理下一行，这样不断重复，直到文件末尾。文件内容并没有 改变，除非你使用重定向存储输出。Sed主要用来自动编辑一个或多个文件；简化对文件的反复操作；编写转换程序等


ed是Linux中功能最简单的文本编辑程序，一次仅能编辑一行而非全屏幕方式的操作
ed abc.txt
#替换第二行所有的it为itcast
2s/it/itcast/g
#保存退出
wq

SED命令
#-e script, --expression=script后面跟要执行的命令
sed -e 's/it/itcast/' abc.txt

sed -e 's/it/itcast/' abc.txt > abc.txt.new
/bin/cp abc.txt.new abc.txt


-n ：使用安静(silent)模式。在一般 sed 的用法中，所有来自 STDIN 的数据一般都会被列出到终端上。但如果加上 -n 参数后，则只有经过sed 特殊处理的那一行(或者动作)才会被列出来。
-e ：直接在命令列模式上进行 sed 的动作编辑；
-f ：直接将 sed 的动作写在一个文件内， -f filename 则可以运行 filename 内的 sed 动作；
-i ：直接修改读取的文件内容，而不是输出到终端。

function：
a ：新增， a 的后面可以接字串，而这些字串会在新的一行出现(目前的下一行)
d ：删除，因为是删除啊，所以 d 后面通常不接任何咚咚
i ：插入， i 的后面可以接字串，而这些字串会在新的一行出现(目前的上一行)
p ：列印，亦即将某个选择的数据印出。通常 p 会与参数 sed -n 一起运行
s ：取代，可以直接进行取代的工作哩！通常这个 s 的动作可以搭配正规表示法！例如 1,20s/old/new/g 就是啦！

#将 /etc/passwd 的内容列出并且列印行号，同时，请将第 2~5 行删除！注意一下，原本应该是要下达 sed -e 才对，没有 -e 也行！
nl /etc/passwd | sed '2,5d'

#要删除第 3 到最后一行
nl /etc/passwd | sed '3,$d' 

#在第二行后(亦即是加在第三行)加上itcast
nl /etc/passwd | sed '2a itcast'

#如果是在第二行前面
nl /etc/passwd | sed '2i itcast'

#仅列出 /etc/passwd 文件内的第 5-7 行
nl /etc/passwd | sed -n '5,7p'

#获取当前eth0网卡的IP地址
ifconfig eth0 | grep 'inet addr' | sed 's/^.*addr://g' | sed 's/Bcast.*$//g'
ifconfig eth0 | grep 'inet addr' | cut -d: -f2 | cut -d' '  -f1
#练习
cat /etc/passwd > passwd.bak
#在第2行后面插入itcast字符
sed -i '3a itcast' passwd.bak

#删除文件中的第2行到第5行
sed -i '2,5d' passwd.bak

#使用\来进行转义或使用#
sed -i 's/\/bin\/bash/\/itcast/g' passwd.bak
sed -i 's#/bin/bash#/itcast#g' passwd.bak

#删除一个文件已#开头的行和空行
sed -i -e '/^#/d' -e '/^$/d' abc.txt








