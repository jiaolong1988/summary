Java的数据类型分为
	基本数据类型（byte、short、int、long、double、float、char、boolean）
	引用数据类型除了基本数据类型以外的所有类型，包括类、接口、数组等。它们是引用类型，存储的是对象的引用，而不是实际的数据值。
	
引用类型解析：

	变量本质上就是一段内存空间。

	int i = 0;
		int 表示数据的大小，既16位的大小。
		i表示一个内存单元地址，内存大小int类型（既16位大小）。
		0数据存 保存在 i地址指定的内存空间中，也可以说0保存在int类型中。


	People p = new People();
		new People() 是一个对象；
		People表示 p变量 只能存放 People类型变量(就是new People()) 的地址。People相当于C语言的指针。
		p是一个(存放People类型)内存地址 的变量。内存大小由People类型指定。
					

基本数据类型与 引用数据类型的区别
	1. 类型本质：
	基本数据类型是Java语言中的8种原始类型，包括byte、short、int、long、float、double、char和boolean。它们是值类型，存储的是实际的数据值。
	引用类型是Java中除了基本数据类型以外的所有类型，包括类、接口、数组等。它们是引用类型，存储的是对象的引用，而不是实际的数据值。

	2. 内存分配：	基本数据类型分配在栈上，占用固定大小的内存空间。例如，int类型占用4个字节（32位），float类型占用4个字节（32位），double类型占用8个字节（64位）等。
	引用类型分配在堆上，占用不固定大小的内存空间。因为它们所引用的对象的大小是不确定的。

	3. 值传递方式：
	基本数据类型在传递时是按值传递的，即复制变量值。例如，将一个整数变量赋值给另一个整数变量时，实际传递的是变量的值。
	引用数据类型在传递时是按引用传递的，即传递的是对象的引用。当一个对象引用赋值给另一个对象引用时，实际传递的是对象的内存地址。