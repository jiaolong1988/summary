Java强、软、弱、虚四大引用（附代码示例）
https://blog.csdn.net/weixin_43899792/article/details/124594561

java类和对象的生命周期
https://blog.csdn.net/yanliguoyifang/article/details/80964237


不可达阶段（Unreachable）
	该对象不再被任何强引用所持有，可能仍被JVM等系统下的某些已经装载的静态变量或线程或JNI所持有，
	这些特殊的强引用被称为“GC root”,这种情况容易导致内存泄露，无法被回收。

	虚拟机是如何判断对象对象不再被引用的呢？虚拟机通过可达性分析算法来判定对象是否不再被引用。这个算法的基本思路是通过一系列称为“GC Roots”的对象作为起始点，
	从这些节点开始向下搜索，搜索所走过的路径称为引用链（Reference Chain），当GC Roots到某个对象没有任何引用链相连时，则称GC Roots到这个对象不可达，则说明此对象是不可用的、是可回收对象。什么样的对象能作为GC Roots对象呢？一般包括：虚拟机栈中引用的对象、类静态属性引用的对象、常量引用的对象、Native方法引用的对象。可达性分析算法判定对象是否可回收


	JVM-可达性分析算法
	https://blog.csdn.net/qq_41323073/article/details/108810233

Proxy 用到了引用队列弱引用-WeakCache ReferenceQueue