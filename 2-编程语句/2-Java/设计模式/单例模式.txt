public class Singleton {
  private Singleton() {}
  
  private static class LazyHolder {
    static final Singleton INSTANCE = new Singleton();
  }
  
  public static Singleton getInstance() {
    return LazyHolder.INSTANCE;
  }
  
}

对应第 4 种情况
	当遇到访问静态字段的指令时，初始化该静态字段所在的类；

这段代码是在著名的单例延迟初始化例子中，只有当调用 Singleton.getInstance 时，程序才会访问 LazyHolder.INSTANCE，才会触发对 LazyHolder 的初始化（对应第 4 种情况），继而新建一个 Singleton 的实例。